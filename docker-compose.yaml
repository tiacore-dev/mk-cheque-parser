services:

  db:
    image: postgres:15
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - parser_network


  web:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    tty: true
    stdin_open: true
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${PORT}:8000"
    command: gunicorn -c gunicorn.conf.py run:app
    environment:
      - HTTP_PROXY=
      - HTTPS_PROXY=
    networks:
      - parser_network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.scheduler
    restart: always
    tty: true
    stdin_open: true
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DISPLAY=:99
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - type: tmpfs
        target: /tmp
    networks:
      - parser_network




volumes:
  pgdata:

networks:
  parser_network:
    driver: bridge